@import '_gridMixins';
@import '_variables';

*, *::before, *::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Spartan', sans-serif;
}

#root > *:last-child {
  margin-bottom: 8rem;
} 

body {
  background-color: $white;
  overflow-x: hidden;
}

.row, .wrap {
  display: flex;
  flex-wrap: wrap;
  width: 100%;
}

@include createColumns(d);

.wrap {
  margin-left: auto;
  margin-right: auto;
  padding: 0 8px;
}

@each $name, $bp in $breakpoints {
  @media (min-width: $bp) {
    @include createColumns($name);
    .wrap { width: $bp * .95 }
  }
}

.btn {
  display: inline-block;
  margin: .7em .7em .7em 0;
  padding: .8em 1.25em;
  border-radius: 4px;
  cursor: pointer;
  border: none;
  background-color: $white;
  color: $primary-color;
  text-decoration: none;

  transition:
    transform .2s ease-in-out,
    box-shadow .2s ease-in-out;
  &:hover, &:focus {
    transform: translateY(-1px);
    box-shadow:
      0px -4px 10px rgba(255, 255, 255, 1),
      0px 5px 15px rgba(0, 0, 0, 0.15);
  }
  
  &-primary {
    @extend .btn;
    background-color: $primary-color;
    color: $white;
  }
}

a:not([class*="btn"]) {
  color: $primary-color;

  &:hover {
    color: lighten($primary-color, 10%);
  }
}

img {
  width: 100%;
  max-height: 600px;
  object-fit: contain;
}

h1 {
  margin-top: .6em;
  margin-bottom: .4em;
  font-size: 1.8rem;
}

h2 {
  font-size: 1.6rem;
  margin-top: .4em;
  margin-bottom: .8em;
}

p {
  margin-bottom: .5em;
}


.btn-close {
  $size: 30px;
  $topRight: 20px;
  $red: rgb(221, 47, 59);

  all: unset;

  position: absolute;
  top: $topRight;
  right: $topRight;
  width: $size;
  height: $size;
  cursor: pointer;

  &::before, &::after {
    height: 4px;
    width: $size;
    position: absolute;
    border-radius: 2px;
    background-color: rgb(192, 192, 192);
    content: '';
    transition: all .3s ease-in;
  }

  &::before {
    transform: rotate(45deg);
  }
  
  &::after {
    transform: rotate(-45deg);
  }

  &:hover, &:focus {
    &::before {
      transform: rotate(-45deg);
      background-color: $red;
    }
    &::after {
      transform: rotate(45deg);
      background-color: $red;
    }
  }
}

